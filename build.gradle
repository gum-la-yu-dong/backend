buildscript {
    ext {
        springBootVersion = '2.3.12.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2"
    }
}
subprojects {
    group 'org.gumrya'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        runtimeOnly 'com.h2database:h2:1.4.200'
    }

    test {
        useJUnitPlatform()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
}
def asciidoctorConfigure = [project(':gumrya-web')]
configure(asciidoctorConfigure){
    apply plugin: "org.asciidoctor.convert"

    dependencies {
        asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.4.RELEASE'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.4.RELEASE'
    }

    ext {
        snippetsDir = file('build/generated-snippets')
    }

    test {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    asciidoctor {
        inputs.dir snippetsDir
        dependsOn test
    }

    bootJar {
        dependsOn asciidoctor
        from ("${asciidoctor.outputDir}/html5") {
            into 'static/docs'
        }
    }
}

project(':gumrya-common')
project(':gumrya-admin')
project(':gumrya-core')
